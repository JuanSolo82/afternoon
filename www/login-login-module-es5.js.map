{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts","./src/app/servicios/auth.service.ts"],"names":[],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"\\n<ion-content>\\n\\t<form [formGroup]=\\\"loginForm\\\">\\n\\t<ion-card style=\\\"margin-top: 50px;\\\">\\n\\t\\t<ion-card-header>\\n\\t\\t\\t<ion-card-subtitle>Ingreso</ion-card-subtitle>\\n\\t\\t\\t<ion-card-title>Inglés técnico</ion-card-title>\\n\\t\\t\\t</ion-card-header>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"floating\\\">email</ion-label>\\n\\t\\t\\t<ion-input formControlName=\\\"email\\\" [(ngModel)]=\\\"email\\\"></ion-input>\\n\\t\\t\\t<div class=\\\"error-messages\\\">\\n\\t\\t\\t\\t<ng-container *ngFor=\\\"let error of error_messages.email\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"error-messages\\\" *ngIf=\\\"loginForm.get('email').hasError(error.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\\\">\\n\\t\\t\\t\\t\\t\\t{{ error.message }}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t</div>\\n\\t\\t</ion-item>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-label position=\\\"floating\\\">password</ion-label>\\n\\t\\t\\t<ion-input formControlName=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"password\\\"></ion-input>\\n\\t\\t\\t<div class=\\\"error-messages\\\">\\n\\t\\t\\t\\t\\t<ng-container *ngFor=\\\"let error of error_messages.password\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"error-messages\\\" *ngIf=\\\"loginForm.get('password').hasError(error.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\\\">\\n\\t\\t\\t\\t\\t\\t\\t{{ error.message }}\\n\\t\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t</ng-container>\\n\\t\\t\\t\\t</div>\\n\\t\\t</ion-item>\\n\\t\\t<ion-item>\\n\\t\\t\\t<ion-button (click)=\\\"OnSubmitLogin()\\\" [disabled]=\\\"!loginForm.valid\\\" fill=\\\"outline\\\">Ingresar</ion-button>\\n\\t\\t</ion-item>\\n\\t</ion-card>\\n\\t</form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".login {\\n  position: relative;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  -webkit-box-pack: center;\\n          justify-content: center;\\n  padding-top: 50px;\\n}\\n\\n.error-messages {\\n  font-size: 10px;\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9KdWFuaXRvL0lvbmljL2FmdGVybm9vbi9zcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxvQkFBQTtFQUFBLGFBQUE7RUFDQSx5QkFBQTtVQUFBLG1CQUFBO0VBQ0Esd0JBQUE7VUFBQSx1QkFBQTtFQUNBLGlCQUFBO0FDQ0o7O0FERUE7RUFDSSxlQUFBO0VBQ0EsVUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmxvZ2luIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiA1MHB4O1xufVxuXG4uZXJyb3ItbWVzc2FnZXN7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIGNvbG9yOiByZWQ7XG59IiwiLmxvZ2luIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDUwcHg7XG59XG5cbi5lcnJvci1tZXNzYWdlcyB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbiAgY29sb3I6IHJlZDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from \"../servicios/auth.service\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\tloginForm: FormGroup;\n\temail: string;\n\tpassword: string;\n\terror_messages = {\n\t\t'email': [\n\t\t\t{ type: 'required', message: 'Email requerido' },\n\t\t\t{ type: 'minLength', message: 'Se requiere de 8 caracteres mínimo' },\n\t\t\t{ type: 'pattern', message: 'Formato incorrecto' }\n\t\t],\n\t\t'password': [\n\t\t\t{ type: 'required', message: 'Campo requerido' },\n\t\t\t{ type: 'minLength', message: 'Clave muy corta' }\n\t\t]\n\t}\n\tconstructor(\n\t\tpublic formBuilder: FormBuilder,\n\t\tprivate authService: AuthService,\n\t\tpublic router: Router\n\t) {\n\t\tthis.loginForm = this.formBuilder.group({\n\t\t\tpassword: new FormControl('', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(4)\n\t\t\t])),\n\t\t\temail: new FormControl('', Validators.compose([\n\t\t\t\tValidators.required,\n\t\t\t\tValidators.minLength(8),\n\t\t\t\tValidators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9]+.[a-zA-Z0-9-.]+$\")\n\t\t\t]))\n\t\t});\n\t}\n\n\tngOnInit() {\n\t}\n\n\tOnSubmitLogin(){\n\t\tconsole.log(\"funcion\");\n\t\tthis.authService.login(this.email, this.password).then(res => {\n\t\t\tthis.router.navigate(['/home']);\n\t\t}).catch(err => console.error(\"error\"));\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { promise } from 'protractor';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\tconstructor(private AFauth: AngularFireAuth) { }\n\tlogin(email: string, password: string){\n\t\treturn new Promise((resolve, rejected) => {\n\t\t\tthis.AFauth.auth.signInWithEmailAndPassword(email, password).then(user => {\n\t\t\t\tresolve(user);\n\t\t\t}).catch(\n\t\t\t\terr => rejected(err)\n\t\t\t);\n\t\t});\n\t\t\n\t}\n}\n"],"sourceRoot":""}